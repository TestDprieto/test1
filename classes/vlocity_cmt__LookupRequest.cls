/*
This file is generated and isn't the actual source code for this
managed global class.
This read-only file shows the class's global constructors,
methods, variables, and properties.
To enable code to compile, all methods return null.
*/
global class LookupRequest {
    global Map<String,Object> additionalData;
    global Boolean continueSearch;
    global Integer displaySequence;
    global Map<String,List<String>> fieldPicklistValues;
    global Boolean isClassBased;
    global String lastRecordId;
    global List<String> nonWildCardFields;
    global List<Map<String,Object>> previousSearchResults;
    global Integer recordOffset;
    global String referenceObjectName;
    global String requestUniqueName;
    global List<String> searchFieldList;
    global Map<String,Map<String,String>> searchFieldsLabelTypeMap;
    global String searchObjectLabel;
    global String searchObjectName;
    global String searchType;
    global Map<String,Object> searchValueMap;
    global LookupRequest(String name, Integer sequence, Map<String,Map<String,String>> fieldsMap, List<String> fieldList, String searchObject, String objectLabel, Map<String,Object> valueMap, String stype, String refObj, Boolean continueS, Map<String,List<String>> pickListValues) {

    }
    global LookupRequest(String name, Integer sequence, Map<String,Map<String,String>> fieldsMap, List<String> fieldList, String searchObject, String objectLabel, Map<String,Object> valueMap, String stype, String refObj, Boolean continueS, Map<String,List<String>> pickListValues, List<String> nonWCFields) {

    }
    global void setAdditionalData(Map<String,Object> event) {

    }
    global void setIsClassBased(Boolean isClass) {

    }
    global void setLastRecordId(String recordId) {

    }
    global void setNonWildCardFields(List<String> valueMap) {

    }
    global void setPreviousSearchResults(List<Map<String,Object>> searchResults) {

    }
    global void setRecordOffset(Integer numberRecords) {

    }
    global void setSearchValueMap(Map<String,Object> valueMap) {

    }
}
