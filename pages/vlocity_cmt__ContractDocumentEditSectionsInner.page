<apex:page standardStylesheets="false" showHeader="false" sidebar="false" controller="vlocity_cmt.ContractDocumentDisplayController">
<html xmlns:ng="http://angularjs.org" lang="en" style="height: 100%">
    <head>
        <meta charset="utf-8"/>
        <apex:stylesheet value="{!URLFOR($Resource.vlocity_cmt__slds, '/assets/styles/salesforce-lightning-design-system-vf.min.css')}"/>
        <apex:stylesheet value="{!$Resource.vlocity_cmt__DocumentBaseCss}" />
        <apex:stylesheet value="{!$Resource.vlocity_cmt__ContractDocumentCreationCss}"/>
        <apex:stylesheet value="{!$Resource.vlocity_cmt__ContractDocumentEditSectionsCss}"/>

        <apex:includeScript value="/support/console/42.0/integration.js"/>
        <apex:includeScript value="/soap/ajax/37.0/connection.js"/>
        <apex:includeScript value="/xdomain/xdomain.js"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__vlocity_core_assets, '/latest/vlocity_core_assets.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__angular_strap_bundle_1_6)}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__tinymceIce, '/js/tinymce/tinymce.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__ui_tinymce, '/src/tinymce.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__angular_utils_pagination, '/dirPagination.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__docxtemplater_bundle, '/jszip/jszip.min.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__docxtemplater_bundle, '/vendor/jszip-utils.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__docxtemplater_bundle, '/vendor/file-saver.min.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__docxtemplater_bundle, '/build/docxtemplater.v3.5.0.min.js')}"/>
        <apex:includeScript value="{!$Resource.vlocity_cmt__ViaDirectives}"/>
        <apex:includeScript value="{!$Resource.vlocity_cmt__SldsAngular}"/>
        <apex:includeScript value="{!$Resource.vlocity_cmt__ContractDocumentEditSectionsApp}"/>
    </head>
    
    <body style="height: 100%">
        <div class="vlocity contract-edit-sections via-slds" ng-app="contractDocumentEditSectionsApp" ng-controller="contractDocumentEditSectionsCtrl" ng-class="{'msie': isInternetExplorer}" style="height:75%">
            <div class="outer-container" style="padding:2rem 0 0; border: none;">
                <div class="document-wrapper">
                    <dir-pagination-controls class="pagination-top" template-url="dir-pagination-controls.tpl.html"></dir-pagination-controls>
                    <div class="save-all-sections-container">
                        <span class="warning" ng-if="saveAllSectionsBtn.text !== '{!$Label.ContractAllSectionSaved}'">{!$Label.ContractDocumentNeedSave}</span>
                        <button type="button" class="slds-button slds-button_link save-all-sections" ng-click="saveAllSections()" ng-disabled="saveAllSectionsBtn.text === '{!$Label.ContractAllSectionSaved}'"><i class="contract-icon icon" ng-class="saveAllSectionsBtn.text === '{!$Label.ContractSaveAllSections}' ? 'icon-v-save-line' : 'icon-v-check-circle-line'"></i>{{saveAllSectionsBtn.text}}</button>
                    </div>
                    <div id="container" class="document-container document container">
                        <div class="tinymce-toolbar"></div>
                        <check-section-saved class="section-form section-form-{{section.sectionSequence}}" dir-paginate="section in versionData.sections | itemsPerPage: 10" doc-section="section" validation-errors="validationErrors" btn-text="saveAllSectionsBtn" redlines = "redlines">
                            <div ng-if="section.sectionDisplayHeader">
                                <div class="restricted" ng-bind-html="trustAsHtml(section.sectionDisplayHeader)"></div>
                            </div>
                            
                            <!--Line Item Section & signature section-->
                            <div class='restricted' ng-show="section.sectionType === 'Item' || section.sectionType === 'Signature' || section.sectionType === 'Embedded Template'">
                                <div class="line-items" ng-bind-html="trustAsHtml(section.formattedLineItemTable)" ng-if="section.sectionType === 'Item'"></div>
                                <div ng-bind-html="trustAsHtml(section.sectionContent)" ng-if="section.sectionType === 'Signature' || section.sectionType === 'Embedded Template'"></div> 
                            </div>
                            <!--End Line Item Section & signature section-->

                            <div class="form-group rich-text-editor" ng-if="section.sectionType !== 'Signature' && section.sectionType !== 'Item' && section.sectionType !== 'Embedded Template'">
                                <div class="tinymce-editor" ui-tinymce="tinymceOptions" ng-model="section.sectionContent" ng-if="!section.sectionIsRestricted || isFullAccess"></div>
                                <div class="restricted" ng-bind-html="trustAsHtml(section.sectionContent)" ng-if="section.sectionIsRestricted && !isFullAccess"></div>
                           </div>
                        </check-section-saved>
                    </div>
                    <dir-pagination-controls class="pagination-bottom" template-url="dir-pagination-controls.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>

        <script type="text/javascript">
            // Limit scope pollution from any deprecated API
            (function() {

                var matched, browser;

                // Use of jQuery.browser is frowned upon.
                // More details: http://api.jquery.com/jQuery.browser
                // jQuery.uaMatch maintained for back-compat
                jQuery.uaMatch = function( ua ) {
                    ua = ua.toLowerCase();
            
                    var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
                        /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
                        /(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
                        /(msie) ([\w.]+)/.exec( ua ) ||
                        ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
                        [];
            
                    return {
                        browser: match[ 1 ] || "",
                        version: match[ 2 ] || "0"
                    };
                };
            
                matched = jQuery.uaMatch( navigator.userAgent );
                browser = {};
            
                if ( matched.browser ) {
                    browser[ matched.browser ] = true;
                    browser.version = matched.version;
                }
            
                // Chrome is Webkit, but Webkit is also Safari.
                if ( browser.chrome ) {
                    browser.webkit = true;
                } else if ( browser.webkit ) {
                    browser.safari = true;
                }
            
                jQuery.browser = browser;
            
                jQuery.sub = function() {
                    function jQuerySub( selector, context ) {
                        return new jQuerySub.fn.init( selector, context );
                    }
                    jQuery.extend( true, jQuerySub, this );
                    jQuerySub.superclass = this;
                    jQuerySub.fn = jQuerySub.prototype = this();
                    jQuerySub.fn.constructor = jQuerySub;
                    jQuerySub.sub = this.sub;
                    jQuerySub.fn.init = function init( selector, context ) {
                        if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
                            context = jQuerySub( context );
                        }
            
                        return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
                    };
                    jQuerySub.fn.init.prototype = jQuerySub.fn;
                    var rootjQuerySub = jQuerySub(document);
                    return jQuerySub;
                };
            
            })();

            var nameSpacePrefix, remoteActions, contractId, contractVersionId, parentId, isEditableValue,isInConsole,userName, userId, docName, containsRedlines, baseRequestUrl, labels;
            nameSpacePrefix = '{!nameSpacePrefix}';
            contractId = '{!$CurrentPage.parameters.Id}';
            parentId = '{!parentId}';
            contractVersionId = '{!contractVersionId}';
            isEditableValue = '{!isEditableValue}';
            isInConsole = sforce.console.isInConsole();
            userName = '{!$User.FirstName}' + ' ' + '{!$User.LastName}';
            userId = '{!$User.Id}';
            docName = '{!JSENCODE(documentName)}';
            containsRedlines = {!containsRedlines};
            baseRequestUrl = '{!$Site.BaseRequestUrl}';
            labels = {
                'allSectionSavedLabel':'{!$Label.ContractAllSectionSaved}',
                'saveAllSectionLabel':'{!$Label.ContractSaveAllSections}', 
                'customizeReadyCheckInLabel':'{!$Label.ContractCustomizeReadyCheckIn}',
                'cancelLabel':'{!$Label.Cancel}',
                'yesCheckInLabel':'{!$Label.ContractYesCheckIn}',
                'noCheckInLabel':'{!$Label.ContractNoCheckIn}',
                'downloadDocRedlineLabel':'{!$Label.ContractDownloadDocRedlines}',
                'yesDownloadLabel':'{!$Label.ContractYesDownload}',
                'downloadPDFLabel':'{!$Label.ContractDownloadPDF}',
                'downloadWordLabel':'{!$Label.ContractDownloadWord}',
                'checkInDocLabel':'{!$Label.ContractCheckInDoc}',
                'safariNoSupportLabel': '{!$Label.ContractSafariNoSupport}',
                'clmContractDocAllSectionsSavedSuccess': '{!$Label.CLMContractDocAllSectionsSavedSuccess}',
                'clmContractDocAllSectionsSaved': '{!$Label.CLMContractDocAllSectionsSaved}',
                'clmContractDocValidationErrorCorrect': '{!$Label.CLMContractDocValidationErrorCorrect}'
            };
            remoteActions = {
                getContractSectionsForVersion: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.getContractSectionsForVersion}',
                    config: {escape: false}
                },
                saveAllSections: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.saveContractSections}',
                    config: {escape: false}
                },
                saveTemplateSection: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.saveOneSection}',
                    config: {escape: false}
                },
                formatProductSection: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.formatProductSection}',
                    config: {escape: false}
                },
                formatSignatureSection: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.formatSignatureSection}',
                    config: {escape: false}
                },
                getUserAccess: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.getContractDocumentAccessControl}',
                    config: {escape: false}
                },
                checkInDocument: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.checkInDocument}',
                    config: {escape: false}
                },
                downloadDocx: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.getContractVersionDocument}',
                    config: {escape: false}
                },
                downloadPdf: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.downloadPdf}',
                    config: {escape: false}
                },
                getDocxTemplate: {
                    action: '{!$RemoteAction.ContractDocumentDisplayController.getDocTemplateForContractType}',
                    config: {escape: false}
                }
            };
        </script>
    </body>
</html>
</apex:page>